	====================ID3D12Device====================
	디스플레이 어댑터(하드웨어, 소프트웨어)를 나타내는 객체
	리소스 생성 및 커맨드 실행을 관리
		- GPU에서 사용할 버퍼, 텍스처, 파이프라인 상태 객체(PSO) 등을 생성
		- 커맨드 큐(Command Queue) 및 커맨드 리스트(Command List)를 생성
		- 메모리 할당 및 디스크립터 힙 관리

	====================IDXGIFactory====================
	스왑 체인 생성
	화면에 관련된 기능들을 제공
		- 사용 가능한 디스플레이 어댑터(GPU)를 열거
		- 출력(Display output, 모니터 등) 열거 및 지원되는 모드 확인

	====================IDXGIAdapter====================
	그래픽 카드(GPU) 또는 디스플레이 어댑터를 나타내는 객체
	WARP 어댑터 : 소프트웨어 기반의 Direct3D 렌더링을 지원하여 GPU가 없는 환경에서도 Direct3D 기능을 실행할 수 있도록 
	WARP(WIndows Advanced Rasterization Platform)

	하드웨어 GPU 또는 소프트웨어 렌더러(WARP)와 같은 그래픽 장치를 관리하는 인터페이스
		- 현재 시스템에 장착된 GPU 목록을 나열
		- GPU의 이름, 전용 메모리 크기(VRAM), 공유 메모리 크기 등을 조회
		- Direct3D 12 디바이스(ID3D12Device)를 생성할 때 사용할 GPU를 선택
		- 멀티 GPU 환경에서 적절한 GPU 선택 가능

	====================IDXGIOutput====================
	GPU에 연결된 디스플레이(모니터)를 나타내는 객체
	어댑터(IDXGIAdapter)가 출력할 수 있는 디스플레이 장치
		- 어댑터(IDXGIAdapter)에 연결된 모니터(디스플레이) 목록을 나열
		- 디스플레이의 지원하는 해상도 및 리프레시율(Refresh Rate) 정보 조회
		- 전체 화면 모드에서 출력 디스플레이를 제어
		- VSync(수직 동기화) 관련 기능 지원

	====================ID3D12Debug====================
	디버깅 기능을 활성화
		- 디버그 레이어(Debug Layer) 활성화
		- D3D12 API 호출을 추적하여 오류 감지
		- 리소스 사용 검사 및 유효성 검증

	====================IDXGISwapChain====================
	CPU에서 GPU로 전달된 렌더링 결과를 화면에 출력하는 역할
	더블 버퍼링 또는 트리플 버퍼링을 지원

	====================ID3D12CommandQueue====================
	GPU에게 내릴 명령을 저장하는 큐
	GPU가 명령을 처리하는 우선순위를 조정
	여러 개의 명령 리스트를 실행할 수 있도록 함
	GPU가 명령을 병렬 처리할 수 있도록 우선순위 조정 가능

	====================ID3D12CommandAllocator====================
	커맨드 리스트가 사용할 메모리를 관리하는 객체
	명령 데이터를 저장하는 버퍼 역할
	커맨드 리스트가 사용하는 메모리를 제공
	실제 실행을 담당하진 않음

	====================ID3D12GraphicsCommandList====================
	GPU가 실행할 명령을 기록
	실행을 위해 커맨드 큐에 제출됨

	====================ID3D12Fence====================
	GPU와 CPU간의 동기화를 위한 객체

	====================ID3D12RootSignature====================
	쉐이더와 GPU 리소스 간의 바인딩 설정
		- 쉐이더가 리소스를 어떻게 참조하는지를 결정
		- 파이프라인에 설정되며 CBV/SRV/UAV 등의 레이아웃을 정의

	====================ID3D12DescriptorHeap====================
	디스크립터(Descriptor)를 저장하는 메모리 공간
	DX11에서는 자동으로 바인딩되었지만, DX12에서는 개발자가 직접 관리
	각 디스크립터는 특정 크기의 메모리를 차지
	해당 크기를 미리 가져와야 정확한 오프셋으로 계산 가능

		Descriptor
			- GPU메모리에 존재하는 Resource메모리에 대한 포인터
			- Type,Format등을 저장하는 단위
			- 텍스처, 버퍼, 샘플러 등

	====================ID3D12Resource====================
	GPU 리소스를 나타내는 객체
	버퍼(Vertex, Index, Constant Buffer) 및 텍스처(Texture) 등
		- 메모리를 할당하고 GPU에서 사용할 수 있도록 함
		- 리소스를 특정 상태(읽기/쓰기 등)로 변경 가능